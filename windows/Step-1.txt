How to start on windows
---------------------------

You can follow link: https://stefanscherer.github.io/yes-you-can-docker-on-windows-7/

First Install chocolaty lib

choco install -y docker
choco install -y docker-machine

-> for vmware: 
choco install -y docker-machine-vmwareworkstation

docker-machine --native-ssh create -d vmwareworkstation default

-> for Oracle vm:

E:\docker>docker-machine create --driver virtualbox default1




Running pre-create checks...
Creating machine...
(default1) Copying C:\Users\ABHISHEK\.docker\machine\cache\boot2docker.iso to C:
\Users\ABHISHEK\.docker\machine\machines\default1\boot2docker.iso...
(default1) Creating VirtualBox VM...
(default1) Creating SSH key...
(default1) Starting the VM...
(default1) Check network to re-create if needed...
(default1) Windows might ask for the permission to create a network adapter. Som
etimes, such confirmation window is minimized in the taskbar.
(default1) Found a new host-only adapter: "VirtualBox Host-Only Ethernet Adapter
 #2"
(default1) Windows might ask for the permission to configure a network adapter.
Sometimes, such confirmation window is minimized in the taskbar.
(default1) Windows might ask for the permission to configure a dhcp server. Some
times, such confirmation window is minimized in the taskbar.
(default1) Waiting for an IP...
Waiting for machine to be running, this may take a few minutes...
Detecting operating system of created instance...
Waiting for SSH to be available...
Detecting the provisioner...
Provisioning with boot2docker...
Copying certs to the local machine directory...
Copying certs to the remote machine...
Setting Docker configuration on the remote daemon...
Checking connection to Docker...
Docker is up and running!
To see how to connect your Docker Client to the Docker Engine running on this vi
rtual machine, run: C:\ProgramData\chocolatey\lib\docker-machine\bin\docker-mach
ine.exe env default1


E:\docker>docker-machine env default1
SET DOCKER_TLS_VERIFY=1
SET DOCKER_HOST=tcp://192.168.99.100:2376
SET DOCKER_CERT_PATH=C:\Users\ABHISHEK\.docker\machine\machines\default1
SET DOCKER_MACHINE_NAME=default1
SET COMPOSE_CONVERT_WINDOWS_PATHS=true
REM Run this command to configure your shell:
REM     @FOR /f "tokens=*" %i IN ('"C:\ProgramData\chocolatey\lib\docker-machine
\bin\docker-machine.exe" env default1') DO @%i


E:\docker>docker pull hello-world

Using default tag: latest
latest: Pulling from library/hello-world
9bb5a5d4561a: Pull complete
Digest: sha256:f5233545e43561214ca4891fd1157e1c3---------------
Status: Downloaded newer image for hello-world:latest


E:\docker>docker-machine ls
NAME       ACTIVE   DRIVER              STATE     URL                         SW
ARM   DOCKER        ERRORS
default    -        vmwareworkstation   Stopped
      Unknown
default1   *        virtualbox          Running   tcp://192.168.99.100:2376
      v18.05.0-ce

E:\docker>docker image ls
REPOSITORY          TAG                 IMAGE ID            CREATED
SIZE
hello-world         latest              e38bc07ac18e        5 weeks ago
1.85kB

E:\docker>docker run hello-world

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
    (amd64)
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker ID:
 https://hub.docker.com/

For more examples and ideas, visit:
 https://docs.docker.com/engine/userguide/


E:\docker>